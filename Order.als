/*
 * 受注のモデル検査
 * 見積明細の内部のモデルは現時点では別と考えている
 */
module Order

abstract sig 住所{}
sig 請求先住所 extends 住所{
}
sig 送付先住所 extends 住所{
}
sig クライアント{}
abstract sig プロジェクト8桁{
	依頼: クライアント,
	代表: プロジェクト8桁代表
}
sig プロジェクト8桁代表 extends プロジェクト8桁{
}{
	代表 = this
}
sig プロジェクト8桁関連 extends プロジェクト8桁{
}{
	-- 関連プロジェクトのクライアントと代表プロジェクトのクライアントは同一(factでの以下と同等?)
	依頼 = 代表.@依頼
}

sig プロジェクト15桁{
	親: プロジェクト8桁
}

sig 大項目{
	細分化: set 小項目
}{
	-- 大項目の親(受注)はひとつ
	one 内容.this
}
sig 小項目{
	担当: one プロジェクト15桁
}{
	-- 小項目の親(大項目)はひとつ
	one 細分化.this
}

sig 受注{
	PRJ: one プロジェクト8桁,
	内容: set 大項目,
	請求先: one 請求先住所,
	送付先: one 送付先住所
}{
	-- 受注のプロジェクトと配下の小項目のプロジェクトは整合する
	no 内容 or PRJ = 内容.細分化.担当.親
}

assert 大項目の親はひとつ{
	all x: 大項目 | one 内容.x
}
check 大項目の親はひとつ for 3 but 10 大項目

assert 小項目の親はひとつ{
	all x: 小項目 | one 細分化.x
}
check 小項目の親はひとつ for 3 but 10 小項目

assert 受注のプロジェクトと配下の小項目のプロジェクトは整合する{
	all x: 受注 | no x.内容 or x.PRJ = x.内容.細分化.担当.親
}
check 受注のプロジェクトと配下の小項目のプロジェクトは整合する for 3 but 5 受注 , 10 大項目 , 20 小項目

assert 関連プロジェクト内でクライアントは同一{
	all x: プロジェクト8桁関連 | x.依頼 = x.代表.依頼
}
check  関連プロジェクト内でクライアントは同一 for 3 but 10 プロジェクト8桁

--------------------------------------------------------------------
-- 絞り込み確認用の述語
--------------------------------------------------------------------
pred 複数の小項目を持つ(x: 大項目){
	#x.細分化 > 1
}
pred 使われてないプロジェクトは無視{
	all x: プロジェクト8桁 | some 親.x
	all x: プロジェクト15桁 | some 担当.x
}
pred 大項目を含まない(x: 受注){
	no x.内容
}
pred 使われてない住所は無視{
	all x: 住所 | some 送付先.x or some 請求先.x
}
pred 使われてないクライアントは無視{
	all x: クライアント | some 依頼.x
}

pred show {
	some x: 大項目 | 複数の小項目を持つ[x]
	no x: 受注 | 大項目を含まない[x]
	使われてないプロジェクトは無視[]
	使われてない住所は無視[]
	使われてないクライアントは無視[]
}
run show
